题目链接：https://www.nowcoder.com/practice/564f4c26aa584921bc75623e48ca3011?tpId=13&tqId=11171&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking
import java.util.ArrayList;
import java.util.List;

public class 二叉树的镜像 {
    static class TreeNode {
        int val;
        TreeNode right = null;
        TreeNode left = null;

        TreeNode(int x) {
            val = x;
        }
    }

    public static void Mirror(TreeNode root) {
        if (root == null) return;
        TreeNode node = root.right;
        root.right = root.left;
        root.left = node;
        Mirror(root.right);
        Mirror(root.left);
    }

    public static TreeNode CreetTree(int arr[]) {
        List<TreeNode> list = new ArrayList<TreeNode>();
        for (int a :
                arr) {
            list.add(new TreeNode(a));
        }
        for (int i = 0; i < arr.length / 2; i++) {
            list.get(i).left = list.get(i * 2 + 1);
            if (i * 2 + 2 < arr.length) list.get(i).right = list.get(i * 2 + 2);
        }
        return list.get(0);
    }

    public static void main(String[] args) {
        int arr[] = {8, 6, 10, 5, 7, 9, 11};
        TreeNode TreeHead = CreetTree(arr);
        Mirror(TreeHead);
        System.out.println(-1);
    }
}
