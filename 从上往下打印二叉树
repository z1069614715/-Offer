题目链接：https://www.nowcoder.com/practice/7fe2212963db4790b57431d9ed259701?tpId=13&tqId=11175&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking
import java.util.ArrayList;

public class PrintBinaryTree {
    class TreeNode{
        int val;
        TreeNode right = null;
        TreeNode left = null;

        TreeNode(int x){
            val = x;
        }
    }
    public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {
        ArrayList<TreeNode> TreeList = new ArrayList<>();
        ArrayList<Integer> result = new ArrayList<>();
        if (root == null) return result;
        TreeList.add(root);
        while (!TreeList.isEmpty()){
            TreeNode node = TreeList.get(0);
            result.add(node.val);
            TreeList.remove(0);
            if (node.left != null){
                TreeList.add(node.left);
            }
            if (node.right != null){
                TreeList.add(node.right);
            }
        }
        return result;
    }
    public TreeNode CreetTree(int arr[]){
        ArrayList<TreeNode> TreeNodeList = new ArrayList<>();
        for (int x:
             arr) {
            TreeNodeList.add(new TreeNode(x));
        }
        for (int i = 0; i < arr.length / 2; i++) {
            TreeNodeList.get(i).left = TreeNodeList.get(i * 2 + 1);
            if (i * 2 + 2 < arr.length) TreeNodeList.get(i).right = TreeNodeList.get(i * 2 + 2);
        }
        return TreeNodeList.get(0);
    }
    public static void main(String[] args) {
        int arr[] = {1,2,3,4,5,6,7,8,9};
        PrintBinaryTree a = new PrintBinaryTree();
        TreeNode node = a.CreetTree(arr);
        ArrayList<Integer> list = a.PrintFromTopToBottom(node);
        for (int b:
             list) {
            System.out.print(b + " ");
        }
    }
}
