题目链接：https://www.nowcoder.com/practice/d8b6b4358f774294a89de2a6ac4d9337?tpId=13&tqId=11169&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking
public class mergeListNode {
    static class ListNode {
        int val;

        ListNode next = null;

        ListNode(int x) {
            val = x;
        }
    }

    public static ListNode Merge(ListNode list1, ListNode list2) {
        ListNode node = new ListNode(-1);
        ListNode node1 = node;
        while (list1 != null || list2 != null) {
            if (list1 == null) {
                ListNode a = new ListNode(list2.val);
                node.next = a;
                node = a;
                list2 = list2.next;
                continue;
            } else if (list2 == null) {
                ListNode a = new ListNode(list1.val);
                node.next = a;
                node = a;
                list1 = list1.next;
                continue;
            }
            if (list1.val < list2.val) {
                ListNode a = new ListNode(list1.val);
                node.next = a;
                node = a;
                list1 = list1.next;
            } else {
                ListNode a = new ListNode(list2.val);
                node.next = a;
                node = a;
                list2 = list2.next;
            }
        }
        return node1.next;
    }

    public static ListNode Merge1(ListNode list1, ListNode list2) {
        if (list1 == null) return list2;
        if (list2 == null) return list1;
        if (list1.val > list2.val){
            ListNode node = list1;
            list1 = list2;
            list2 = node;
        }
        ListNode result = list1;
        while (list2 != null) {
            if (list1.val <= list2.val && list1.next != null && list2.val <= list1.next.val) {
                ListNode node = new ListNode(list2.val);
                node.next = list1.next;
                list1.next = node;
                list1 = node;
                list2 = list2.next;
                continue;
            } else if (list1.val <= list2.val && list1.next == null) {
                ListNode node = new ListNode(list2.val);
                list1.next = list2;
                list1 = list1.next;
                list2 = list2.next;
            }else {
                list1 = list1.next;
            }
        }
        return result;
    }

    public static void main(String[] args) {
        int arr[] = {1, 3, 5, 7, 8};
        int brr[] = {2, 3, 6, 9};
        ListNode a = new ListNode(arr[0]);
        ListNode newA = a;
        for (int i = 1; i < arr.length; i++) {
            ListNode a1 = new ListNode(arr[i]);
            a.next = a1;
            a = a1;
        }

        ListNode b = new ListNode(brr[0]);
        ListNode newB = b;
        for (int i = 1; i < brr.length; i++) {
            ListNode b1 = new ListNode(brr[i]);
            b.next = b1;
            b = b1;
        }

        ListNode c = Merge1(newA, newB);
        while (c != null) {
            System.out.println(c.val);
            c = c.next;
        }
    }
}
